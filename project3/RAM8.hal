/**
 * Memory of eight 16-bit registers.
 * If load is asserted, the value of the register selected by
 * address is set to in; Otherwise, the value does not change.
 * The value of the selected register is emitted by out.
 */
CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
    // 第一步：将load信号根据地址分配到对应的寄存器
    DMux8Way(in=load, sel=address, a=load0, b=load1, c=load2, d=load3, 
             e=load4, f=load5, g=load6, h=load7);
    
    // 第二步：实现8个16位寄存器
    Register(in=in, load=load0, out=reg0);
    Register(in=in, load=load1, out=reg1);
    Register(in=in, load=load2, out=reg2);
    Register(in=in, load=load3, out=reg3);
    Register(in=in, load=load4, out=reg4);
    Register(in=in, load=load5, out=reg5);
    Register(in=in, load=load6, out=reg6);
    Register(in=in, load=load7, out=reg7);
    
    // 第三步：根据地址选择输出对应的寄存器值
    Mux8Way16(a=reg0, b=reg1, c=reg2, d=reg3, e=reg4, f=reg5, g=reg6, h=reg7, 
              sel=address, out=out);
}